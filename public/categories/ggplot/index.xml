<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ggplot on Portfolio website of Renata Mariani</title>
    <link>/categories/ggplot/</link>
    <description>Recent content in ggplot on Portfolio website of Renata Mariani</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Oct 2017 21:28:43 -0500</lastBuildDate>
    
	<atom:link href="/categories/ggplot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2016 California Contributors plots</title>
      <link>/blogs/ipsum/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/blogs/ipsum/</guid>
      <description>knitr::opts_chunk$set( message = FALSE, warning = FALSE, tidy=FALSE, # display code as typed size=&amp;quot;small&amp;quot;) # slightly smaller font for code options(digits = 3) # default figure size knitr::opts_chunk$set( fig.width=6.75, fig.height=6.75, fig.align = &amp;quot;center&amp;quot; ) library(tidyverse) # Load ggplot2, dplyr, and all the other tidyverse packages library(mosaic) library(ggthemes) library(lubridate) library(fivethirtyeight) library(here) library(skimr) library(janitor) library(vroom) library(tidyquant) In this challenge we will reproduce the plots of the 2016 California Contributors, shown below.
knitr::include_graphics(here::here(&amp;quot;images&amp;quot;, &amp;quot;challenge2.</description>
    </item>
    
    <item>
      <title>2016 California Contributors plots</title>
      <link>/projects/teste/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/projects/teste/</guid>
      <description>Firstly, we will import the CA contributors dataset and the zip code data base and merge both.
# Load dataframes CA_contributors_2016 &amp;lt;- vroom::vroom(here::here(&amp;quot;data&amp;quot;,&amp;quot;CA_contributors_2016.csv&amp;quot;)) zip_code &amp;lt;- vroom::vroom(here::here(&amp;quot;data&amp;quot;,&amp;quot;zip_code_database.csv&amp;quot;)) # Changing the column zip of our zip_code dataframe to a numeric value zip_code &amp;lt;- zip_code %&amp;gt;% mutate(zip = as.numeric(zip)) # Merging dataframes CA_contributors_2016 &amp;lt;- CA_contributors_2016 %&amp;gt;% inner_join(zip_code, by = &amp;quot;zip&amp;quot;) Secondly, we will clean our dataframe and select/calculate the variables that will be used in our analysis.</description>
    </item>
    
  </channel>
</rss>